Problem 4.1
a)
SOFTWARE:
This class of openflow hardware implements additional openflow features based on the hardware of traditional network devices. Most of the openflow features are implemented in software, only few featuresin hardware. Because this kind of openflow hardware could perfectly work with traditional devices, and the software implementation of openflow protocol doesn't cost much, so most of openflow devices are made in the class of software. But this kind of implementation is much slower than the classes "DEVICE" & "HARDWARE".

HARDWARE:
This class of openflow hardware implements all features in ASIC. The design and optimization of ASIC hardware cost lot of money and could last a long time, so there is not so many choices of this class on the markt. The most important advantage of this class is the fast package processing speed.

b)
Vacancy events address the inherent problem that controller may sent too many entries to the openflow switch, which is more than the capacity of the switch. This may result in error and will be returned to the controller, then the controller have to deal with the errors first and cannot continue processing the incoming packets(in full speed).
Vacancy events could warn the controller when the number of entries in the switch reaches the threshold chosen by the controller, so that the controller could deal with this problem in advance to avoid it.

c)
The part of matching field & priority should be stored in TCAM, while the other parts such as instructions, counters, timeouts could be placed in normal DRAMs.
To implement constant-time packet processing, first of all, the constant-time packet matching should be implemented. However, if the matching field is stored in a RAM space, the incoming packet must be matched with usage of searching algorithms, which means the matching time is not constant, but depends on the size of matching table. Therefore, matching field must be stored in TCAM to ensure the constant-time packet matching. In comparison to that, making use of other parts such as instructions is not dependent of the number of entries, so different instructions could be saved in different position of DRAM & be pointed by the matching field in TCAM.
